Strong Password Detection
Write a function that uses regular expressions to make sure the password string it is passed is strong. A strong password is defined as one that is at least eight characters long, contains both uppercase and lowercase characters, and has at least one digit. You may need to test the string against multiple regex patterns to validate its strength.
Ans>
import re

def valid_length(string):
    """checks if length is > 8 to be a strong password"""
    lenght_regex = re.compile(r'.{8,}')
    if not lenght_regex.search(string):
        return False
    return True

def has_upper(string):
    """Check if string contains one upper letter or more"""
    upper_regex = re.compile(r'.*[A-Z]+.*')
    if not upper_regex.search(string):
        return False
    return True

def has_lower(string):
    """Check if string contains one lower letter or more"""
    lower_regex = re.compile(r'.*[a-z]+.*')
    if not lower_regex.search(string):
        return False
    return True

def has_digit(string):
    """Check if one or more signs is a digit"""
    digit_regex = re.compile(r'.*\d+.*')
    if not digit_regex.search(string):
        return False
    return True

def strong_password(password):
    """
    Validate if passed password is considered "strong",
    Password is considered strong if:
    - is eight characters or longer
    - contains uppercase and lowercase characters
    - has one digit or more
    """
    if not valid_length(password):
        return False
    if not has_upper(password):
        return False
    if not has_lower(password):
        return False
    if not has_digit(password):
        return False
    return True

